{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\langchain\\\\langchain-chatbot\\\\frontend\\\\src\\\\components\\\\ChatWindow.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = {\n        text: input,\n        user: true\n      };\n      setMessages([...messages, userMessage]);\n      try {\n        const response = await fetch('http://127.0.0.1:8000/ask', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            question: input\n          })\n        });\n        const data = await response.json();\n        const botMessage = {\n          text: data.answer,\n          user: false\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n      setInput('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.user ? 'user-message' : 'bot-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === 'Enter' && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatWindow","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","text","user","response","fetch","method","headers","body","JSON","stringify","question","data","json","botMessage","answer","prevMessages","error","console","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/user/langchain/langchain-chatbot/frontend/src/components/ChatWindow.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ChatWindow.css';\n\nconst ChatWindow = () => {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  const sendMessage = async () => {\n    if (input.trim()) {\n      const userMessage = { text: input, user: true };\n      setMessages([...messages, userMessage]);\n\n      try {\n        const response = await fetch('http://127.0.0.1:8000/ask', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ question: input }),\n        });\n\n        const data = await response.json();\n        const botMessage = { text: data.answer, user: false };\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n\n      setInput('');\n    }\n  };\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"messages\">\n        {messages.map((message, index) => (\n          <div key={index} className={message.user ? 'user-message' : 'bot-message'}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\n      />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default ChatWindow;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAIF,KAAK,CAACG,IAAI,CAAC,CAAC,EAAE;MAChB,MAAMC,WAAW,GAAG;QAAEC,IAAI,EAAEL,KAAK;QAAEM,IAAI,EAAE;MAAK,CAAC;MAC/CP,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEM,WAAW,CAAC,CAAC;MAEvC,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAA2B,EAAE;UACxDC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,QAAQ,EAAEd;UAAM,CAAC;QAC1C,CAAC,CAAC;QAEF,MAAMe,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClC,MAAMC,UAAU,GAAG;UAAEZ,IAAI,EAAEU,IAAI,CAACG,MAAM;UAAEZ,IAAI,EAAE;QAAM,CAAC;QACrDP,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEF,UAAU,CAAC,CAAC;MAC9D,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAChC;MAEAnB,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEN,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B5B,OAAA;MAAK2B,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBzB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B/B,OAAA;QAAiB2B,SAAS,EAAEG,OAAO,CAACnB,IAAI,GAAG,cAAc,GAAG,aAAc;QAAAiB,QAAA,EACvEE,OAAO,CAACpB;MAAI,GADLqB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnC,OAAA;MACEoC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhC,KAAM;MACbiC,QAAQ,EAAGC,CAAC,IAAKjC,QAAQ,CAACiC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAInC,WAAW,CAAC;IAAE;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACFnC,OAAA;MAAQ2C,OAAO,EAAEpC,WAAY;MAAAqB,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACjC,EAAA,CA/CID,UAAU;AAAA2C,EAAA,GAAV3C,UAAU;AAiDhB,eAAeA,UAAU;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}